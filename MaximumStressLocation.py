from Momentdiagram import moment
from XFLR5 import angle 
#from ICalc import PleunsFinalFunlist

def CalcMaxStress(I_list, y, M_list):
    return([(M_list[i] * y[i])/I_list[i] for i in range(len(I_list))])


#parameters
halfwingspan = 27.5/2
AoA = angle(1.839)
V = 112.04
rho = 0.38
loadfactor = 2.6
yieldstress = 450000000

#list moment of inertia, span and moment
import matplotlib.pyplot as plt
I_list = [0.001889777446277576, 0.0018531155713637805, 0.001816989734608272, 0.0017813946853785377, 0.0017463251988845442, 0.0017117760761787353, 0.0016777421441560364, 0.001644218255553849, 0.0016111992889520543, 0.0015786801487730124, 0.0015466557652815615, 0.0015151210945850194, 0.001484071118633181, 0.0014535008452183228, 0.0014234053079751974, 0.0013937795663810368, 0.0013646187057555525, 0.0013359178372609338, 0.0013076720979018493, 0.001279876650525446, 0.001252526683821349, 0.0012256174123216645, 0.0011991440764009748, 0.0011731019422763422, 0.0011474863020073075, 0.0011222924734958898, 0.0010975158004865873, 0.0010731516525663782, 0.001049195425164716, 0.001025642539553537, 0.0010024884428472536, 0.0009797286080027578, 0.0009573585338194197, 0.0009353737449390888, 0.000913769791846094, 0.0008925422508672406, 0.0008716867241718157, 0.0008511988397715817, 0.0008310742515207827, 0.0008113086391161404, 0.0007918977080968548, 0.0007728371898446051, 0.0007541228415835488, 0.0007357504463803237, 0.0007177158131440434, 0.0007000147766263031, 0.0006826431974211752, 0.0006655969619652112, 0.0006488719825374414, 0.0006324641972593741, 0.0006163695700949982, 0.0006005840908507786, 0.0005851037751756616, 0.0005699246645610705, 0.0005550428263409081, 0.0005404543536915553, 0.0005261553656318725, 0.0005121420070231983, 0.0004984104485693498, 0.0004849568868166241, 0.000471777544153795, 0.00045886866881211704, 0.0004462265348653222, 0.00043384744222962175, 0.00042172771666370537, 0.00040986370976874134, 0.0003982517989883776, 0.00038688838760873976, 0.00037576990475843286, 0.0003648928054085396, 0.0003542535703726229, 0.00034384870630672345, 0.00033367474570936096, 0.0003237282469215336, 0.0003140057941267184, 0.0003045039973508716, 0.0002952194924624275, 0.0002861489411722995, 0.00027728903103387914, 0.0002686364754430377, 0.00026018801363812433, 0.0002519404106999671, 0.00024389045755187353, 0.00023603497095962846, 0.0002283707935314968, 0.00022089479371822137, 0.0002136038658130241, 0.00020649492995160546, 0.0001995649321121446, 0.00019281084411529979, 0.0001862296636242076, 0.00017981841414448365, 0.0001735741450242216, 0.00016749393145399486, 0.00016157487446685488, 0.000155814100938332, 0.00015020876358643527, 0.00014475604097165243, 0.00013945313749695026, 0.00013429728340777383, 0.00012928573479204726, 0.00012441577358017296, 0.00011968470754503255, 0.00011508987030198641, 0.00011062862130887301, 0.0001062983458660103, 0.0001020964551161946, 9.802038604470076e-05, 9.40676014792826e-05, 9.023559009017284e-05, 8.652186639008264e-05, 8.292397073420194e-05, 7.943946932019948e-05, 7.606595418822265e-05, 7.280104322089756e-05, 6.964238014332922e-05, 6.658763452310118e-05, 6.363450177027577e-05, 6.078070313739406e-05, 5.802398571947587e-05, 5.5362122454019495e-05, 5.279291212100253e-05, 5.0314179342880654e-05, 4.7923774584588725e-05, 4.5619574153540166e-05, 4.339948019962696e-05, 4.126142071522014e-05, 3.9203349535169204e-05, 3.7223246336802626e-05, 3.531911663992731e-05, 3.3488991806829056e-05, 3.173092904227244e-05, 3.0043011393500618e-05, 2.8423347750235667e-05, 2.687007284467816e-05, 2.538134725150754e-05, 2.3955357387881953e-05, 2.259031551343823e-05, 2.128445973029203e-05, 2.003605398303764e-05, 1.8843388058748105e-05]
span_list = [halfwingspan*(i/141) for i in range(len(I_list))]
y_max = [0.23287837995587635, 0.23171991586940494, 0.23056145178293352, 0.2294029876964621, 0.2282445236099907, 0.2270860595235193, 0.22592759543704785, 0.22476913135057644, 0.22361066726410503, 0.22245220317763362, 0.2212937390911622, 0.2201352750046908, 0.21897681091821938, 0.21781834683174797, 0.21665988274527656, 0.21550141865880515, 0.21434295457233374, 0.2131844904858623, 0.2120260263993909, 0.21086756231291948, 0.20970909822644807, 0.20855063413997665, 0.20739217005350524, 0.20623370596703383, 0.20507524188056242, 0.203916777794091, 0.2027583137076196, 0.20159984962114819, 0.20044138553467677, 0.19928292144820534, 0.19812445736173392, 0.1969659932752625, 0.1958075291887911, 0.1946490651023197, 0.19349060101584828, 0.19233213692937687, 0.19117367284290546, 0.19001520875643405, 0.18885674466996263, 0.18769828058349122, 0.18653981649701978, 0.18538135241054837, 0.18422288832407696, 0.18306442423760555, 0.18190596015113414, 0.18074749606466273, 0.17958903197819132, 0.1784305678917199, 0.1772721038052485, 0.17611363971877708, 0.17495517563230567, 0.17379671154583423, 0.17263824745936282, 0.1714797833728914, 0.17032131928642, 0.1691628551999486, 0.16800439111347718, 0.16684592702700574, 0.16568746294053435, 0.16452899885406294, 0.16337053476759153, 0.16221207068112012, 0.16105360659464868, 0.15989514250817724, 0.15873667842170586, 0.15757821433523442, 0.15641975024876303, 0.1552612861622916, 0.1541028220758202, 0.15294435798934877, 0.1517858939028774, 0.15062742981640598, 0.14946896572993457, 0.14831050164346313, 0.14715203755699172, 0.14599357347052028, 0.1448351093840489, 0.14367664529757748, 0.14251818121110607, 0.14135971712463466, 0.14020125303816325, 0.1390427889516918, 0.13788432486522043, 0.136725860778749, 0.1355673966922776, 0.13440893260580616, 0.13325046851933475, 0.13209200443286334, 0.13093354034639193, 0.1297750762599205, 0.1286166121734491, 0.1274581480869777, 0.12629968400050628, 0.12514121991403487, 0.12398275582756345, 0.12282429174109201, 0.12166582765462063, 0.12050736356814919, 0.1193488994816778, 0.11819043539520635, 0.11703197130873497, 0.11587350722226356, 0.11471504313579212, 0.11355657904932073, 0.1123981149628493, 0.1112396508763779, 0.11008118678990648, 0.10892272270343507, 0.10776425861696363, 0.10660579453049222, 0.10544733044402083, 0.10428886635754939, 0.103130402271078, 0.10197193818460659, 0.10081347409813515, 0.09965501001166374, 0.09849654592519234, 0.09733808183872093, 0.09617961775224952, 0.09502115366577811, 0.09386268957930667, 0.09270422549283527, 0.09154576140636386, 0.09038729731989242, 0.08922883323342104, 0.08807036914694963, 0.08691190506047819, 0.08575344097400676, 0.08459497688753538, 0.08343651280106397, 0.08227804871459253, 0.08111958462812112, 0.07996112054164971, 0.07880265645517831, 0.07764419236870687, 0.07648572828223549, 0.07532726419576408, 0.07416880010929267, 0.07301033602282123, 0.0718518719363498, 0.07069340784987842]
M_list, V_list, halfspan, y_list, dy= moment(33819,V,rho,AoA, loadfactor)


stress=[]
margin_of_safety = []
for M, y_max, I in zip(M_list, y_max, I_list): #change span_list to y_max
    maxstress= maximumstress(M, y_max, I)
    safety_margin = yieldstress/maxstress
    stress.append(maxstress)
    margin_of_safety.append(safety_margin)


span_limit = 10.5

span_list_limit = [value for value in span_list if value <= span_limit]
margin_of_safety_limit = margin_of_safety[:len(span_list_limit)]

print("maximum stress", maxstress)


plt.plot(span_list_limit, margin_of_safety_limit)
plt.xlabel('Half wingspan [m]')
plt.ylabel('Margin of safety')
plt.show()

#plots
#plt.plot(span_list, M_list)
#plt.show()

#plt.plot(span_list, I_list)
#plt.show()
